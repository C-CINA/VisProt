function particle_picking_gautomatch(mod, min, max, kv, cs, px, rawfolder, datasetid)
% Writes script and submits a Gautomatch-based particle detection job for Negative-staining and Cryo-EM data


switch mod;
case 'Negative stain'
    system( sprintf(['echo ''#!/bin/bash -l \n \n'...
                    '#SBATCH -o ',pwd,'/out.%%j \n'...
                    '#SBATCH -e ',pwd,'/err.%%j \n'...
                    '#SBATCH --job-name=gautomatch \n'...
                    '#SBATCH --qos=1day \n'...
                    '#SBATCH --mem-per-cpu=4G \n'...
                    '#SBATCH --nodes=1 \n'...
                    '#SBATCH --ntasks-per-node=1 \n'...
                    '#SBATCH --partition=k80 \n'...
                    '#SBATCH --gres=gpu:1 \n \n'...
                    '#loading CUDA for Gautomatch \n'...
                    'module purge \n'...
                    'module load CUDA/7.5.18 \n'...
                    'shopt -s expand_aliases \n'...
                    'alias gautomatch="/scicore/projects/scicore-p-structsoft/Gautomatch/Gautomatch_v0.53/bin/Gautomatch-v0.53_sm_20_cu7.5_x86_64" \n \n'...
                    'cd RawMicrographs/',rawfolder(datasetid).name,' \n'...
                    'time gautomatch --apixM $5  --kV $3 --Cs $4 --speed 1 --dont_invertT --diameter $1 --cc_cutoff 0.7 *.mrc && \n'...
                    'rm *_rejected.star && rm *.box && \n'...  
                    'find . -name "*_automatch.star" -exec rename automatch automatch$1 {} \\; && \n \n'...
                    'for j in `seq $(( 5 + $1)) 5 $2` \n'...
                    'do \n'...
                    'time gautomatch --apixM $5 --speed 1 --cc_cutoff 0.7 --kV $3 --Cs $4 --exclusive_picking --excluded_suffix _automatch$1.star --dont_invertT --diameter $j *.mrc && \n'...
                    'rm *_rejected.star && rm *.box && \n'...
                    'find . -name "*_automatch.star" -exec rename automatch automatch$j {} \\; && \n \n'...
                    'ls *_automatch$1.star >> $1s.txt && \n'...
                    'ls *_automatch$j.star >> $js.txt && \n \n'...
                    '#---DO NOT CHANGE THE $1 IN NONE OF THE \''\\''{ print \\$1 }\\''''--- \n \n'...
                    'for i in `seq 1 $(ls -l *_automatch$j.star | wc | awk \''\\''{ print \\$1 }\\'''')` \n'...
                    'do \n'...
                    'echo "$(grep -a -A5000 "_rlnAutopickFigureOfMerit #5" $(head -$i $js.txt | tail -1) | grep -v "_rlnAutopickFigureOfMerit #5")" >> $(head -$i $1s.txt | tail -1) \n'...
                    'done \n'...
                    'rm $1s.txt && rm $js.txt \n'...
                    'rm *_automatch$j.star \n \n'...
                    'done \n'...
                    'module unload CUDA/7.5.18 \n'...
                    'find . -name "*_automatch$1.star" -exec rename _automatch$1.star _automatchAll.star {} \\; \n'...
                    'cd ../../ '' > gautoScript.sh']) );
    
	system(sprintf(['sbatch gautoScript.sh ',num2str(min),' ',num2str(max),' ',num2str(kv),' ',num2str(cs),' ',num2str(px)]));
                    
case 'Cryo-EM'
    system( sprintf(['echo ''#!/bin/bash -l \n \n'...
                    '#SBATCH -o ',pwd,'/out.%%j \n'...
                    '#SBATCH -e ',pwd,'/err.%%j \n'...
                    '#SBATCH --job-name=gautomatch \n'...
                    '#SBATCH --qos=1day \n'...
                    '#SBATCH --mem-per-cpu=4G \n'...
                    '#SBATCH --nodes=1 \n'...
                    '#SBATCH --ntasks-per-node=1 \n'...
                    '#SBATCH --partition=k80 \n'...
                    '#SBATCH --gres=gpu:1 \n \n'...
                    '#loading CUDA for Gautomatch \n'...
                    'module purge \n'...
                    'module load CUDA/7.5.18 \n'...
                    'shopt -s expand_aliases \n'...
                    'alias gautomatch="/scicore/projects/scicore-p-structsoft/Gautomatch/Gautomatch_v0.53/bin/Gautomatch-v0.53_sm_20_cu7.5_x86_64" \n \n'...
                    'cd RawMicrographs/',rawfolder(datasetid).name,' \n'...
                    'time gautomatch --apixM $5  --kV $3 --Cs $4 --speed 1 --diameter $1 --cc_cutoff 0.7 *.mrc && \n'...
                    'rm *_rejected.star && rm *.box && \n'...  
                    'find . -name "*_automatch.star" -exec rename automatch automatch$1 {} \\; && \n \n'...
                    'for j in `seq $(( 5 + $1)) 5 $2` \n'...
                    'do \n'...
                    'time gautomatch --apixM $5 --speed 1 --cc_cutoff 0.7 --kV $3 --Cs $4 --exclusive_picking --excluded_suffix _automatch$1.star --diameter $j *.mrc && \n'...
                    'rm *_rejected.star && rm *.box && \n'...
                    'find . -name "*_automatch.star" -exec rename automatch automatch$j {} \\; && \n \n'...
                    'ls *_automatch$1.star >> $1s.txt && \n'...
                    'ls *_automatch$j.star >> $js.txt && \n \n'...
                    '#---DO NOT CHANGE THE $1 IN NONE OF THE \''\\''{ print \\$1 }\\''''--- \n \n'...
                    'for i in `seq 1 $(ls -l *_automatch$j.star | wc | awk \''\\''{ print \\$1 }\\'''')` \n'...
                    'do \n'...
                    'echo "$(grep -a -A5000 "_rlnAutopickFigureOfMerit #5" $(head -$i $js.txt | tail -1) | grep -v "_rlnAutopickFigureOfMerit #5")" >> $(head -$i $1s.txt | tail -1) \n'...
                    'done \n'...
                    'rm $1s.txt && rm $js.txt \n'...
                    'rm *_automatch$j.star \n \n'...
                    'done \n'...
                    'module unload CUDA/7.5.18 \n'...
                    'find . -name "*_automatch$1.star" -exec rename _automatch$1.star _automatchAll.star {} \\; \n'...
                    'cd ../../ '' > gautoScript.sh']) );

       
                
    system(sprintf(['sbatch gautoScript.sh ',num2str(min),' ',num2str(max),' ',num2str(kv),' ',num2str(cs),' ',num2str(px)]));
 
end


                
    
